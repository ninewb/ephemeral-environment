name: Launch Ephemeral Environment
on:
  push:
    paths:
      - '**terraform.tfvars.json'
jobs:
  build:
    env:
      TF_VAR_tailscale_auth_key: ${{ secrets.TAILSCALE_OAUTH }}
      TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
      TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
      TF_VAR_client_secret: ${{ secrets.CLIENT_SECRET }}
      TF_VAR_tenant_id: ${{ secrets.TENANT_ID }}
      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: check-out repository code
        uses: actions/checkout@v4

      - name: azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: set public key
        env:
          PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
        run: |
          mkdir -p /home/runner/.ssh
          echo ${{ secrets.SSH_PUBLIC_KEY }} > ~/.ssh/id_rsa.pub
          chmod 600 -R ~/.ssh/id_rsa.pub

      - uses: ./.github/install-packages

      - name: update variables
        run: |
          jq -r --argjson cidr "${{ vars.VM_CIDRS }}" '.public_access_cidrs = $cidr' ${{ github.workspace }}/terraform.tfvars.json | sponge ${{ github.workspace }}/terraform.tfvars.json
          _time=$(date +%s)
          jq -r --arg name "$_time" '.resource_group += $name' ${{ github.workspace }}/terraform.tfvars.json | sponge ${{ github.workspace }}/terraform.tfvars.json                                                                                      
          
          cat ${{ github.workspace }}/terraform.tfvars.json

      - name: uncomment backends
        id: uncomment
        run: sed -i 's/^#*//' ${{ github.workspace }}/backend.tf

      - name: terraform setup   
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: terraform initialization
        run: terraform init -backend-config=${{ github.workspace }}/meraxes-actions.hcl

      - name: terraform plan
        uses: dflook/terraform-plan@v1.29.1
        env:
          TF_VAR_tailscale_auth_key: ${{ secrets.TAILSCALE_OAUTH }}
          TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.TENANT_ID }}
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
      
      - name: terraform apply
        uses: dflook/terraform-apply@v1.29.1
        env:
          TF_VAR_tailscale_auth_key: ${{ secrets.TAILSCALE_OAUTH }}
          TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          TF_VAR_client_id: ${{ secrets.CLIENT_ID }}
          TF_VAR_client_secret: ${{ secrets.CLIENT_SECRET }}
          TF_VAR_tenant_id: ${{ secrets.TENANT_ID }}
          TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
          
      - name: terraform outputs
        run: |
          INSTANCE=$(terraform output -raw instance_ip_addr)
          echo ${INSTANCE}



